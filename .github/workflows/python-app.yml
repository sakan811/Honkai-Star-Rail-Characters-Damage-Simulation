name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read
  checks: write    # Needed for Super-Linter to report status checks
  statuses: write  # Needed for Super-Linter status updates

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5454:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    steps:
    - uses: actions/checkout@v4
      with:
        # Full git history is needed to get a proper list of changed files
        fetch-depth: 0

    - name: Cache pip dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Super-Linter
      uses: super-linter/super-linter@v7.2.1
      env:
        VALIDATE_ALL_CODEBASE: true
        DEFAULT_BRANCH: master
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_PYTHON: true
        VALIDATE_YAML: true
        PYTHON_BLACK_CONFIG_FILE: pyproject.toml
        PYTHON_PYLINT_CONFIG_FILE: .pylintrc
            
    - name: Test with pytest
      env:
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5454
      run: |
        python -m pytest tests
